<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="      
    http://www.springframework.org/schema/beans       
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd       
    http://www.springframework.org/schema/context       
    http://www.springframework.org/schema/context/spring-context-2.5.xsd      
    http://www.springframework.org/schema/aop      
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd      
    http://www.springframework.org/schema/tx      
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-lazy-init="true">
	<description>Spring Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder location="classpath*:/init.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" dependency-check="none">
		<property name="driverClass">
			<value>${datasource.mysql.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.mysql.url}</value>
		</property>
		<property name="user">
			<value>${datasource.mysql.username}</value>
		</property>
		<property name="password">
			<value>${datasource.mysql.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.mysql.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.mysql.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.mysql.maxPoolSize}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${c3p0.acquireRetryAttempts}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${c3p0.acquireRetryDelay}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${c3p0.testConnectionOnCheckin}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${c3p0.checkoutTimeout}</value>
		</property>
		<property name="preferredTestQuery">
			<value>${c3p0.mysql.preferredTestQuery}</value>
		</property>
		<property name="maxConnectionAge">
			<value>${c3p0.maxConnectionAge}</value>
		</property>
		<property name="unreturnedConnectionTimeout">
			<value>${c3p0.unreturnedConnectionTimeout}</value>
		</property>
		<property name="debugUnreturnedConnectionStackTraces">
			<value>${c3p0.debugUnreturnedConnectionStackTraces}</value>
		</property>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.connection.release_mode=${hibernate.connection.release_mode}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.format_sql=${hibernate.format_sql}
				<!--hibernate.cache.use_second_level_cache=true hibernate.cache.use_query_cache=true 如果Hibernate3这里缓存配置要改hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider 
					hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider -->
				hibernate.jdbc.fetch_size=50
				hibernate.jdbc.batch_size=30
				hibernate.archive.autodetection=class
				hibernate.query.startup_check=false
			</value>
		</property>

		<!-- Hibernate @Entity 注解加载 指定相应的包，避免全部扫描和避免在其它包中写实体类 -->
		<property name="packagesToScan">
			<list>
				<value>com.thinkmore.business.bean.</value>
			</list>
		</property>

	</bean>

	<!-- Spring 注解扫描加载 bean -->
	<context:component-scan base-package="com.thinkmore.business.dao,com.thinkmore.business.service,com.thinkmore.business.action" />

	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- service层事务支持 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<bean id="LogAdvice" class="com.thinkmore.framework.monitor.log.LogAdviceInterceptor">
		<property name="cache">
			<ref bean="ehCache" />
		</property>
	</bean>

	<!-- proxy-target-class默认值为false，基于接口的代理(jdk)，否则是基于类的代理(cglib) -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="txPointcut" expression="execution(* com.thinkmore.business.service..*.*(..))" />
		<aop:pointcut id="logPointcut" expression="execution(* com.thinkmore.business.service..*.*(..))" />
		<aop:advisor advice-ref="LogAdvice" pointcut-ref="logPointcut" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="NameParamJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="springUtils" class="com.thinkmore.framework.common.spring.SpringUtils" lazy-init="false" />
	<bean id="myBeanFactoryPostProcessor" class="com.thinkmore.framework.common.spring.MyBeanFactoryPostProcessor" />
</beans>